# ==============================================================================
# Project: TreeCode
# ==============================================================================
#  _____ ____  _____ _____ ____ ___  ____  _____ 
# |_   _|  _ \| ____| ____/ ___/ _ \|  _ \| ____|
#   | | | |_) |  _| |  _|| |  | | | | | | |  _|  
#   | | |  _ <| |___| |__| |__| |_| | |_| | |___ 
#   |_| |_| \_|_____|_____\____\___/|____/|_____|
# 
# Licensed under the MIT License <http://opensource.org/licenses/MIT>.
# SPDX-License-Identifier: MIT
# TREECODE - Copyright (c) - Amr MOUSA 2025-2026
# ==============================================================================
#
# File: CMakeLists.txt
# Description: This project is a C++ library for managing hierarchical data
# structures. It includes classes for containers, elements, groups, templates,
# and logging. The library can be built as a shared library and includes options
# for building tests and examples.
#
# Author: Amr MOUSA
# License: MIT License
# Version: 0.0.1
# Date: 7 February 2025
#
# ==============================================================================

# ==============================================================================
# 1. Example: DID_Lists
# ==============================================================================
# This CMakeLists.txt file defines a CMake project that creates an executable target named "DID_Lists".
# The executable is built from the source file located at "DID_Lists/main.cpp".
add_executable(DID_Lists 
    DID_Lists/main.cpp
)

# Adds a dependency for the target 'DID_Lists' on the library target '${CMAKE_PROJECT_NAME}Lib'.
# This ensures that '${CMAKE_PROJECT_NAME}Lib' is built before 'DID_Lists'.
add_dependencies(DID_Lists ${CMAKE_PROJECT_NAME}Lib)

# Links the target DID_Lists with the private library ${CMAKE_PROJECT_NAME}Lib.
# This means that ${CMAKE_PROJECT_NAME}Lib will be used only for DID_Lists and
# will not be exposed to other targets that link with DID_Lists.
target_link_libraries(DID_Lists PRIVATE ${CMAKE_PROJECT_NAME}Lib)

# Sets properties for the target 'DID_Lists':
# - RUNTIME_OUTPUT_DIRECTORY: Specifies the directory where the runtime 
#   executable will be placed. It is set to a path that includes the source 
#   directory, build type, and 'bin' directory.
# - OUTPUT_NAME: Defines the name of the output executable as 'DID_Lists'.
if(MSVC)
    set(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/binaries/${CMAKE_BUILD_TYPE})
    set_target_properties(DID_Lists PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
        OUTPUT_NAME "DID_Lists"
    )
    foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
        string(TOUPPER ${OUTPUTCONFIG} UPPERCASE_CONFIG)
        set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${UPPERCASE_CONFIG} ${CMAKE_BINARY_DIR}/lib)
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${UPPERCASE_CONFIG} ${CMAKE_BINARY_DIR}/lib)
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${UPPERCASE_CONFIG} ${CMAKE_BINARY_DIR}/bin)
    endforeach()
else()
    set_target_properties(DID_Lists PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
        OUTPUT_NAME "DID_Lists"
    )
endif()

# ==============================================================================